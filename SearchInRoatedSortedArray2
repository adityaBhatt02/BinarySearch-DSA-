public class SearchInRoatedSortedArray2 {
    public static void main(String[] args) {
        int[] arr = {1,0,1,1,1};
        int target = 0;

        boolean ans = binarySearchInRSA(arr , target);
        System.out.print(ans);
    }

    static boolean binarySearchInRSA(int[] arr , int target) {
        int start = 0;
        int end = arr.length - 1;

        while(start <= end) {
            int mid = start + (end - start)/2;

            if(arr[mid] == target) {
                return true;
            }

            if(arr[start] == arr[mid] && arr[mid] == arr[end]) {   // condition when start,mid and end elements are same and check until not.{To identify which side is sorted}
                start = start + 1;
                end = end - 1;
                continue;
            }


            if(arr[mid] >= arr[start]) {
                if(arr[mid] >= target && target >= arr[start]) {
                    end = mid - 1;
                }else {
                    start = mid + 1;
                }
            }else {
                if(arr[mid] <= target && target <= arr[end]) {
                    start = mid + 1;
                }else {
                    end = mid - 1;
                }
            }
        }
      return false;
    }
}
